= form_with model: @mix do |form|
  .mt-10.flex.flex-col.items-center.gap-5
    .mb-6
      = form.label :name, 'Name the mix', class: 'mr-3'
      = form.text_field :name, required: true
    %p.mb-6 Enter video URL below and click add. Adjust volumes as needed.
    .js-videos-container
      = form.fields_for :videos do |videos_form|
        .js-video.mt-5.flex.flex-col.justify-center.items-center.gap-5.border-dashed.border-2.border-black{class: "w-[500px] h-[281px] #{'hidden' if videos_form.options[:child_index] > 1}"}
          .hx-hide.text-xl.font-display.text-center{style: 'text-shadow: 2px 2px lightblue'} Enter video URL or ID
          .flex.justify-center.items-center.gap-4
            .hx-hide.flex.items-center.gap-5
              = videos_form.text_field :url, class: 'hx-url', placeholder: 'YouTube video URL', 'aria-label': 'YouTube video URL'
            %button.button.px-5.py-2.leading-5.border-2.border-black.font-medium{
              'hx-get': new_video_path,
              'hx-vals': "js:{url: event.target.parentElement.querySelector('.hx-url').value}",
              'hx-swap': 'outerHTML',
              'hx-on:htmx:before-swap': "event.target.parentElement.parentElement.querySelectorAll('.hx-hide').forEach(el => el.classList.add('hidden'))",
            } Add

  .mt-10.flex.justify-center
    %button.js-add-video.button.px-4.py-2.leading-5.border-2.border-black
      + Add another video

  .my-16.flex.justify-center.items-center
    = form.button class: 'js-submit-mix button px-6 py-3 border-4 text-xl font-display bg-[lightblue] border-[black]' do
      %span.relative{class: 'top-[2px]'} Create mix
